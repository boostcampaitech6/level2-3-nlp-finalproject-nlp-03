help:  ## Show help
	@grep -E '^[.a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'

setup: set-git set-style-dep set-precommit

clean: ## Clean autogenerated files
	rm -rf dist
	find . -type f -name "*.DS_Store" -ls -delete
	find . | grep -E "(__pycache__|\.pyc|\.pyo)" | xargs rm -rf
	find . | grep -E ".pytest_cache" | xargs rm -rf
	find . | grep -E ".ipynb_checkpoints" | xargs rm -rf
	rm -f .coverage

format: ## Run pre-commit hooks
	pre-commit run -a

style: ## Lint your code
	black --config pyproject.toml .
	isort --settings-path pyproject.toml .
	flake8 .

quality: ## Check your code quality
	black --config pyproject.toml --check .
	isort --settings-path pyproject.toml --check-only .
	flake8 .

set-git: ## Set gitmessage
	git config --local commit.template .gitmessage
	git config --global core.editor "code --wait"
	git config --global alias.lg "log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"

set-style-dep: # Install Linting packages
	pip3 install isort==5.13.2 black==23.12.1 flake8==6.1.0

set-precommit: # Set up pre-commit
	pip3 install pre-commit==3.6
	pre-commit install

train: # Train model based on the script
	sh script/train.sh

predict: # Inference based on the script
	sh script/inference.sh

run: # Pipeline from training to inference
	sh script/train.sh
	sh script/inference.sh
